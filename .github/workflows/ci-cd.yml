name: MK Processor CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: mkuser
          POSTGRES_PASSWORD: mkpass123
          POSTGRES_DB: mkprocessor_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install pytest pytest-asyncio pytest-cov
        
    - name: Run tests
      env:
        DATABASE_URL: postgresql://mkuser:mkpass123@localhost:5432/mkprocessor_test
        REDIS_URL: redis://localhost:6379
      run: |
        pytest backend/tests/ -v --cov=backend --cov-report=xml
        
    - name: Build Docker images
      run: |
        docker-compose build
        
    - name: Run integration tests
      run: |
        docker-compose up -d
        sleep 10
        curl -f http://localhost:8000/health || exit 1
        docker-compose down

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to production
      run: |
        echo "Deploy to production server"
        # Add your deployment commands here
